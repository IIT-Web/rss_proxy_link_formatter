<?php

/**
* @file
* Main file for the RSS Proxy Link Formatter module.
*/

define('RSS_PROXY_LINK_FORMATTER_DEFAULT_SERVICE_PATH', 'rss-proxy-link-formatter');
define('RSS_PROXY_LINK_FORMATTER_DEFAULT_URL_PARAMETER', 'feed');
define('RSS_PROXY_LINK_FORMATTER_DEFAULT_PAGE_TITLE', 'RSS Proxy Service Endpoint');
define('RSS_PROXY_LINK_FORMATTER_DEFAULT_EXTERNAL_CACHE', 3600);

/**
 * Implements hook_menu().
 */
function rss_proxy_link_formatter_menu() {
  $items[variable_get('rss_proxy_link_formatter_service_path', RSS_PROXY_LINK_FORMATTER_DEFAULT_SERVICE_PATH)] = array(
    'title' => variable_get('rss_proxy_link_formatter_page_title', RSS_PROXY_LINK_FORMATTER_DEFAULT_PAGE_TITLE),
    'page callback' => 'rss_proxy_link_formatter_proxy_service',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/rss-proxy-link-formatter'] = array(
    'title' => 'RSS Proxy Link Formatter',
    'description' => 'Configure the RSS Proxy Link Formatter module.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rss_proxy_link_formatter_config_form'),
    'access arguments' => array('administer rss_proxy_link_formatter'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function rss_proxy_link_formatter_permission() {
  return array(
    'administer rss_proxy_link_formatter' => array(
      'title' => t('Administer RSS Proxy Link Formatter module'),
      'description' => t('Perform administration tasks and configure RSS Proxy Link Formatter module.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Page callback; provides output for proxy service path.
 *
 * Uses curl to fetch rss feed, provided in the rss GET parameter,
 * then attempts to parse it using SimpleXML and if successful return JSON.
 *
 * @return
 *   JSON results if successful. HTML error string if not successful.
 *
 * @see rss_proxy_link_formatter_menu()
 */
function rss_proxy_link_formatter_proxy_service() {
  $url_param = variable_get('rss_proxy_link_formatter_url_parameter', RSS_PROXY_LINK_FORMATTER_DEFAULT_URL_PARAMETER);
  if (isset($_GET[$url_param]) && trim($_GET[$url_param]) != '') {
    $url = $_GET[$url_param];

    // Start curl session
    $session = curl_init($url);
    curl_setopt($session, CURLOPT_HEADER, FALSE);
    curl_setopt($session, CURLOPT_FOLLOWLOCATION, TRUE);
    curl_setopt($session, CURLOPT_RETURNTRANSFER, TRUE);

    // Make the call
    $results = curl_exec($session);
    curl_close($session);

    // Process the results xml to json
    $xml = simplexml_load_string($results, 'SimpleXMLElement', LIBXML_NOCDATA);

    if ($xml) {
      if (drupal_page_is_cacheable()) {
        $cache_time = variable_get('rss_proxy_link_formatter_external_cache', RSS_PROXY_LINK_FORMATTER_DEFAULT_EXTERNAL_CACHE);
        drupal_add_http_header('Cache-Control', 'public, max-age=' . $cache_time);
      }
      drupal_json_output($xml);
    } 
    else {
      drupal_page_is_cacheable(true);
      return '<p>There was an error parsing the XML RSS feed.</p>';
    }
  } 
  else {
    drupal_page_is_cacheable(true);
    return '<p>There was an error. No RSS Feed Provided.</p>';
  }
}

/**
 * Form constructor for the RSS Proxy Link Formatter admin form.
 *
 * @see system_settings_form()
 * @see rss_proxy_link_formatter_config_form_submit()
 *
 * @ingroup forms
 */
function rss_proxy_link_formatter_config_form($form, &$form_state) {
  $form = array();

  // Text field for rss proxy service endpoint page title
  $form['rss_proxy_link_formatter_page_title'] = array(
    '#type' => 'textfield',
    '#title' => t('RSS Proxy Service Page Title'),
    '#size' => 100,
    '#description' => t('Page title for RSS proxy service endpoint page.'),
    '#required' => TRUE,
    '#default_value' => variable_get('rss_proxy_link_formatter_page_title', RSS_PROXY_LINK_FORMATTER_DEFAULT_PAGE_TITLE),
  );

  // Text field for relative path to rss proxy service
  $form['rss_proxy_link_formatter_service_path'] = array(
    '#type' => 'textfield',
    '#title' => t('RSS Proxy Service Path'),
    '#size' => 100,
    '#description' => t('Specify a relative URL path for the RSS proxy service endpoint.'),
    '#required' => TRUE,
    '#default_value' => variable_get('rss_proxy_link_formatter_service_path', RSS_PROXY_LINK_FORMATTER_DEFAULT_SERVICE_PATH),
    '#field_prefix' => url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q='),
  );

  // Text field for RSS feed source URL parameter
  $form['rss_proxy_link_formatter_url_parameter'] = array(
    '#type' => 'textfield',
    '#title' => t('RSS Proxy Service URL Parameter'),
    '#size' => 100,
    '#description' => t('The URL parameter used to pass the RSS link source URL to the proxy service.'),
    '#required' => TRUE,
    '#default_value' => variable_get('rss_proxy_link_formatter_url_parameter', RSS_PROXY_LINK_FORMATTER_DEFAULT_URL_PARAMETER),
  );

  // Select field for setting the external cache expiration time
  $form['rss_proxy_link_formatter_external_cache'] = array(
    '#type' => 'select',
    '#title' => t('Expiration of cached feeds'),
    '#options' => array(
      0 => t('<none>'),
      60 => t('1 min'),
      180 => t('3 min'),
      300 => t('5 min'),
      600 => t('10 min'),
      900 => t('15 min'),
      1800 => t('30 min'),
      2700 => t('45 min'),
      3600 => t('1 hour'),
      7200 => t('2 hours'),
      10800 => t('3 hours'),
      21600 => t('6 hours'),
      32400 => t('9 hours'),
      43200 => t('12 hours'),
      86400 => t('1 day'),
    ),
    '#default_value' => variable_get('rss_proxy_link_formatter_external_cache', RSS_PROXY_LINK_FORMATTER_DEFAULT_EXTERNAL_CACHE),
    '#description' => t('The maximum time an external cache can use an old version of a proxied feed.'),
  );

  //return system_settings_form($form);
  $form = system_settings_form($form);
  $form['#submit'][] = 'rss_proxy_link_formatter_config_form_submit';
  return $form;
}

/**
 * Form submission handler for rss_proxy_link_formatter_config_form().
 *
 * @see rss_proxy_link_formatter_config_form()
 */
function rss_proxy_link_formatter_config_form_submit($form, &$form_state) {
  // Set a variable to let menu_execute_active_handler() know that menu rebuild is required
  variable_set('menu_rebuild_needed', TRUE);
  //drupal_set_message(t('TEST: The form has been submitted.'));
}

/**
 * Implements hook_field_formatter_info().
 */
function rss_proxy_link_formatter_field_formatter_info() {
  return array(
    'ajax_rss_proxy_link' => array(
      'label' => t('Ajax Proxy of RSS Link'),
      'field types' => array('link_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function rss_proxy_link_formatter_field_formatter_view($obj_type, $object, $field, $instance, $langcode, $items, $display) {
  $elements = array();
  foreach ($items as $delta => $item) {
    $elements[$delta] = array(
      '#markup' => theme('rss_proxy_link_formatter_' . $display['type'], array('element' => $item, 'field' => $instance)),
    );
  }
  return $elements;
}

/**
 * Implements hook_theme().
 */
function rss_proxy_link_formatter_theme() {
  return array(
    'rss_proxy_link_formatter_ajax_rss_proxy_link' => array(
      'template' => 'ajax-rss-proxy-link',
      'variables' => array('element' => NULL),
    ),
  );
}

/**
 * Prepares variables for Ajax RSS Proxy Link templates.
 *
 * Default template: ajax-rss-proxy-link.tpl.php
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element
 *   - field: An associative array containing the properties of the field
 */
function template_preprocess_rss_proxy_link_formatter_ajax_rss_proxy_link(&$variables) {
  $proxy_path = variable_get('rss_proxy_link_formatter_service_path', RSS_PROXY_LINK_FORMATTER_DEFAULT_SERVICE_PATH);
  $url_param = variable_get('rss_proxy_link_formatter_url_parameter', RSS_PROXY_LINK_FORMATTER_DEFAULT_URL_PARAMETER);
  $variables['proxy_url'] = '/' . $proxy_path . '?' . $url_param . '=' . $variables['element']['url'];
}
